<%- include('../partials/header') %>
<%- include('../partials/sidebar') %>

<div class="content-wrapper">
  <div class="content-header">
    <div class="container-fluid">
      <div class="row mb-2">
        <div class="col-sm-6">
          <h1 class="m-0"><i class="fas fa-tachometer-alt me-2"></i>Dashboard</h1>
        </div>
        <div class="col-sm-6">
          <ol class="breadcrumb float-sm-end">
            <li class="breadcrumb-item active">Dashboard</li>
          </ol>
        </div>
      </div>
    </div>
  </div>

  <div class="content">
    <div class="container-fluid">
      <!-- Sensor Cards Row -->
      <div class="row">
        <!-- Temperature Card -->
        <div class="col-sm-6 col-md-4 mb-4">
          <div class="sensor-card">
            <div class="sensor-card-header">
              <i class="fas fa-thermometer-half text-danger"></i>
              <span>Suhu</span>
            </div>
            <div class="sensor-card-body">
              <div class="sensor-value" id="temperature-value">
                <%= latestValues.temperature !== null ? latestValues.temperature.toFixed(1) : '--' %>
              </div>
              <div class="sensor-unit">°C</div>
              <div class="sensor-status" id="temperature-status">
                <% if (latestValues.temperature !== null) { %>
                  <% if (latestValues.temperature > 30) { %>
                    <span class="badge bg-danger">Tinggi</span>
                  <% } else if (latestValues.temperature < 20) { %>
                    <span class="badge bg-info">Rendah</span>
                  <% } else { %>
                    <span class="badge bg-success">Normal</span>
                  <% } %>
                <% } else { %>
                  <span class="badge bg-secondary">Tidak Ada Data</span>
                <% } %>
              </div>
            </div>
          </div>
        </div>
        
        <!-- Humidity Card -->
        <div class="col-sm-6 col-md-4 mb-4">
          <div class="sensor-card">
            <div class="sensor-card-header">
              <i class="fas fa-water text-info"></i>
              <span>Kelembaban Udara</span>
            </div>
            <div class="sensor-card-body">
              <div class="sensor-value" id="humidity-value">
                <%= latestValues.humidity !== null ? latestValues.humidity.toFixed(1) : '--' %>
              </div>
              <div class="sensor-unit">%</div>
              <div class="sensor-status" id="humidity-status">
                <% if (latestValues.humidity !== null) { %>
                  <% if (latestValues.humidity > 80) { %>
                    <span class="badge bg-info">Tinggi</span>
                  <% } else if (latestValues.humidity < 40) { %>
                    <span class="badge bg-warning">Rendah</span>
                  <% } else { %>
                    <span class="badge bg-success">Normal</span>
                  <% } %>
                <% } else { %>
                  <span class="badge bg-secondary">Tidak Ada Data</span>
                <% } %>
              </div>
            </div>
          </div>
        </div>
        
        <!-- Soil Moisture Card -->
        <div class="col-sm-6 col-md-4 mb-4">
          <div class="sensor-card">
            <div class="sensor-card-header">
              <i class="fas fa-seedling text-success"></i>
              <span>Kelembaban Tanah</span>
            </div>
            <div class="sensor-card-body">
              <div class="sensor-value" id="soil-moisture-value">
                <%= latestValues.soilMoisture !== null ? latestValues.soilMoisture.toFixed(1) : '--' %>
              </div>
              <div class="sensor-unit">%</div>
              <div class="sensor-status" id="soil-moisture-status">
                <% if (latestValues.soilMoisture !== null) { %>
                  <% if (latestValues.soilMoisture > 80) { %>
                    <span class="badge bg-info">Basah</span>
                  <% } else if (latestValues.soilMoisture < 30) { %>
                    <span class="badge bg-danger">Kering</span>
                  <% } else { %>
                    <span class="badge bg-success">Normal</span>
                  <% } %>
                <% } else { %>
                  <span class="badge bg-secondary">Tidak Ada Data</span>
                <% } %>
              </div>
            </div>
          </div>
        </div>
      </div>
      
      <!-- Valve Status Card -->
      <div class="row mb-4">
        <div class="col-md-6 mb-3 mb-md-0">
          <div class="card h-100">
            <div class="card-header">
              <i class="fas fa-tint me-2"></i>
              Status Keran Air
            </div>
            <div class="card-body">
              <div class="d-flex flex-column flex-sm-row align-items-sm-center">
                <div class="me-sm-3 mb-2 mb-sm-0 text-center text-sm-start">
                  <div class="status-indicator d-inline-block <%= latestValues.valveStatus === 'on' ? 'status-on' : 'status-off' %>"></div>
                </div>
                <div class="mb-3 mb-sm-0 text-center text-sm-start">
                  <h4 id="valve-status" class="m-0">
                    <%= latestValues.valveStatus === 'on' ? 'Aktif' : 'Tidak Aktif' %>
                  </h4>
                  <p class="mb-0 text-muted">
                    <i class="fas fa-info-circle me-1"></i>
                    <%= latestValues.valveStatus === 'on' ? 'Keran air sedang menyala' : 'Keran air sedang mati' %>
                  </p>
                </div>
                <div class="ms-auto text-center">
                  <a href="/dashboard/device-control" class="btn btn-primary">
                    <i class="fas fa-sliders-h me-2"></i>Kontrol
                  </a>
                </div>
              </div>
            </div>
          </div>
        </div>
        
        <div class="col-md-6 mb-3 mb-md-0">
          <div class="card h-100">
            <div class="card-header">
              <i class="fas fa-chart-area me-2"></i>
              Status Sistem
            </div>
            <div class="card-body">
              <div class="list-group">
                <div class="list-group-item d-flex flex-column flex-sm-row justify-content-between align-items-sm-center">
                  <div class="mb-2 mb-sm-0">
                    <i class="fas fa-wifi me-2 text-success"></i>
                    Status Koneksi
                  </div>
                  <span class="badge bg-success rounded-pill">Terhubung</span>
                </div>
                <div class="list-group-item d-flex flex-column flex-sm-row justify-content-between align-items-sm-center">
                  <div class="mb-2 mb-sm-0">
                    <i class="fas fa-database me-2 text-primary"></i>
                    Database
                  </div>
                  <span class="badge bg-success rounded-pill">Aktif</span>
                </div>
                <div class="list-group-item d-flex flex-column flex-sm-row justify-content-between align-items-sm-center">
                  <div class="mb-2 mb-sm-0">
                    <i class="fas fa-microchip me-2 text-info"></i>
                    Perangkat
                  </div>
                  <span class="badge bg-success rounded-pill">Online</span>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
      
      <!-- Chart Row -->
      <div class="row">
        <div class="col-md-12">
          <div class="card">
            <div class="card-header d-flex flex-column flex-md-row justify-content-between align-items-md-center">
              <div class="mb-3 mb-md-0">
                <i class="fas fa-chart-line me-2"></i>
                Grafik Sensor
              </div>
              <div class="btn-group btn-group-sm">
                <button type="button" class="btn btn-outline-primary active" data-sensor="temperature">Suhu</button>
                <button type="button" class="btn btn-outline-primary" data-sensor="humidity">Kelembaban Udara</button>
                <button type="button" class="btn btn-outline-primary" data-sensor="soil_moisture">Kelembaban Tanah</button>
              </div>
            </div>
            <div class="card-body">
              <div class="chart-container" style="position: relative; height:400px;">
                <canvas id="sensorChart"></canvas>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Dashboard JavaScript -->
<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Chart initialization
    const ctx = document.getElementById('sensorChart').getContext('2d');
    let sensorChart = new Chart(ctx, {
      type: 'line',
      data: {
        labels: [],
        datasets: [{
          label: 'Suhu (°C)',
          data: [],
          borderColor: '#e74c3c',
          backgroundColor: 'rgba(231, 76, 60, 0.1)',
          borderWidth: 2,
          tension: 0.3,
          fill: true
        }]
      },
      options: {
        responsive: true,
        maintainAspectRatio: false,
        plugins: {
          legend: {
            position: 'top',
          },
          tooltip: {
            mode: 'index',
            intersect: false
          }
        },
        scales: {
          x: {
            type: 'time',
            time: {
              unit: 'minute',
              displayFormats: {
                minute: 'HH:mm'
              }
            },
            title: {
              display: true,
              text: 'Waktu'
            }
          },
          y: {
            beginAtZero: false,
            title: {
              display: true,
              text: 'Nilai'
            }
          }
        }
      }
    });
    
    // Fetch initial chart data
    fetchSensorData('temperature', 'day');
    
    // Handle sensor button clicks
    document.querySelectorAll('.btn-group .btn').forEach(button => {
      button.addEventListener('click', function() {
        // Remove active class from all buttons
        document.querySelectorAll('.btn-group .btn').forEach(btn => {
          btn.classList.remove('active');
        });
        
        // Add active class to clicked button
        this.classList.add('active');
        
        // Fetch data for selected sensor
        const sensorType = this.getAttribute('data-sensor');
        fetchSensorData(sensorType, 'day');
      });
    });
    
    // Function to fetch sensor data
    function fetchSensorData(sensorType, timeRange) {
      fetch(`/dashboard/sensor-data?type=${sensorType}&timeRange=${timeRange}`)
        .then(response => response.json())
        .then(data => {
          updateChart(sensorType, data.data);
        })
        .catch(error => {
          console.error('Error fetching sensor data:', error);
        });
    }
    
    // Function to update chart
    function updateChart(sensorType, data) {
      const labels = data.map(item => new Date(item.timestamp));
      const values = data.map(item => item.value);
      
      let label, color, bgColor;
      
      switch(sensorType) {
        case 'temperature':
          label = 'Suhu (°C)';
          color = '#e74c3c';
          bgColor = 'rgba(231, 76, 60, 0.1)';
          break;
        case 'humidity':
          label = 'Kelembaban Udara (%)';
          color = '#3498db';
          bgColor = 'rgba(52, 152, 219, 0.1)';
          break;
        case 'soil_moisture':
          label = 'Kelembaban Tanah (%)';
          color = '#2ecc71';
          bgColor = 'rgba(46, 204, 113, 0.1)';
          break;
      }
      
      sensorChart.data.labels = labels;
      sensorChart.data.datasets[0].label = label;
      sensorChart.data.datasets[0].data = values;
      sensorChart.data.datasets[0].borderColor = color;
      sensorChart.data.datasets[0].backgroundColor = bgColor;
      
      sensorChart.update();
    }
    
    // Function to update sensor values
    function updateSensorValues() {
      fetch('/api/latest')
        .then(response => response.json())
        .then(data => {
          if (data.success) {
            const values = data.data;
            
            // Update temperature
            if (values.temperature !== null) {
              document.getElementById('temperature-value').textContent = values.temperature.toFixed(1);
              
              let tempStatus = '';
              if (values.temperature > 30) {
                tempStatus = '<span class="badge bg-danger">Tinggi</span>';
              } else if (values.temperature < 20) {
                tempStatus = '<span class="badge bg-info">Rendah</span>';
              } else {
                tempStatus = '<span class="badge bg-success">Normal</span>';
              }
              document.getElementById('temperature-status').innerHTML = tempStatus;
            }
            
            // Update humidity
            if (values.humidity !== null) {
              document.getElementById('humidity-value').textContent = values.humidity.toFixed(1);
              
              let humStatus = '';
              if (values.humidity > 80) {
                humStatus = '<span class="badge bg-info">Tinggi</span>';
              } else if (values.humidity < 40) {
                humStatus = '<span class="badge bg-warning">Rendah</span>';
              } else {
                humStatus = '<span class="badge bg-success">Normal</span>';
              }
              document.getElementById('humidity-status').innerHTML = humStatus;
            }
            
            // Update soil moisture
            if (values.soilMoisture !== null) {
              document.getElementById('soil-moisture-value').textContent = values.soilMoisture.toFixed(1);
              
              let soilStatus = '';
              if (values.soilMoisture > 80) {
                soilStatus = '<span class="badge bg-info">Basah</span>';
              } else if (values.soilMoisture < 30) {
                soilStatus = '<span class="badge bg-danger">Kering</span>';
              } else {
                soilStatus = '<span class="badge bg-success">Normal</span>';
              }
              document.getElementById('soil-moisture-status').innerHTML = soilStatus;
            }
            
            // Update valve status
            document.getElementById('valve-status').textContent = values.valveStatus === 'on' ? 'Aktif' : 'Tidak Aktif';
          }
        })
        .catch(error => {
          console.error('Error updating sensor values:', error);
        });
    }
    
    // Update sensor values every 5 seconds
    setInterval(updateSensorValues, 5000);
    
    // Update chart data every 30 seconds
    setInterval(() => {
      const activeButton = document.querySelector('.btn-group .btn.active');
      const sensorType = activeButton.getAttribute('data-sensor');
      fetchSensorData(sensorType, 'day');
    }, 30000);
  });
</script>

<%- include('../partials/footer') %>